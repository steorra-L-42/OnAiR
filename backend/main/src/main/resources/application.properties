spring.application.name=main
# env
spring.config.import=optional:file:.env[.properties]
# DB Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
# Insert Test User start
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8
spring.jpa.defer-datasource-initialization=true
# Insert Test User end
# Hibernate Dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# JPA Setting
spring.jpa.hibernate.ddl-auto=${DDL_AUTO_OPTION}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# JWT SecretKey
spring.jwt.secret=${JWT_SECRET_KEY}
spring.jwt.refresh.cookie.path=${JWT_REFRESH_COOKIE_PATH}
# cors
cors.url=${CORS_URL}
# nginx forward-header-strategy
server.forward-headers-strategy=framework
## Log Hibernate SQL statements through logger
#logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.SQL=${LOG_LEVEL}
## Parameter tracing
#logging.level.org.hibernate.type=trace
## Before the insert operation, Hibernate performs a null check.
spring.jpa.properties.hibernate.check_nullability=true
# FIRE_BASE_CONFIG
# firebase.config=${FIREBASE_CONFIG}
# firebase.project.id=${FIREBASE_PROJECT_ID}
# kafka-server
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
# Producer
spring.kafka.producer.acks=${KAFKA_PRODUCER_ACKS}
# Consumer
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Log Level
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=WARN
logging.level.kafka.retrytopic=WARN
logging.level.kafka.listener=WARN
# SMS
sms.api.url=${SMS_API_URL}
sms.api.username=${SMS_API_USERNAME}
sms.api.key=${SMS_API_KEY}
# actuator
management.endpoints.jmx.exposure.include=health, info, prometheus, metrics
management.endpoints.web.exposure.include=health, info, prometheus, metrics
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
# log level
logging.level.root=${LOG_LEVEL}
# channel
channel.max.size=${MAX_CHANNEL}
#S3
spring.servlet.multipart.enabled=${MULTIPART_ENABLED}
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE}
spring.profiles.include=${PROFILES_INCLUDE}
spring.servlet.multipart.resolve-lazily=true
